name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4

      - name: Install dependencies and build
        uses: withastro/action@v3
        with:
          node-version: 20
          package-manager: pnpm@latest

      - name: Install Puppeteer dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget ca-certificates fonts-liberation libappindicator3-1 libasound2 libatk-bridge2.0-0 libatk1.0-0 libcups2 libdbus-1-3 libgdk-pixbuf2.0-0 libnspr4 libnss3 libxcomposite1 libxrandr2 libxdamage1 libxkbcommon0 libxshmfence1 libgbm1 libpangocairo-1.0-0 libpango-1.0-0 libcairo2 libcairo-gobject2 libfontconfig1
          pnpm add puppeteer

      - name: Generate PDF from dist/index.html
        run: |
          node <<'EOF'
          const puppeteer = require('puppeteer');
          const fs = require('fs');
          (async () => {
            const browser = await puppeteer.launch({
              headless: 'new',
              args: ['--no-sandbox']
            });
            const page = await browser.newPage();
            await page.goto(`file://${process.env.GITHUB_WORKSPACE}/dist/index.html`, { waitUntil: 'networkidle0' });
            await page.pdf({ path: 'output.pdf', format: 'A4' });
            await browser.close();
          })();
          EOF

      - name: Upload PDF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: site-pdf
          path: output.pdf

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
